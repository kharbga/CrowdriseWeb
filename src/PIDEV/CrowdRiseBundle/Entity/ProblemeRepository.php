<?php

namespace PIDEV\CrowdRiseBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ProblemeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProblemeRepository extends EntityRepository
{
     public function search($categorie) {

        $query = $this->createQueryBuilder('PIDEVCrowdRiseBundle:Media')
                ->select('p.idProbleme,p.titre,p.dateProbleme,p.description,p.categorie,p.deadlineProbleme,m.path')
                ->distinct()
                ->from('PIDEVCrowdRiseBundle:Probleme', 'p')
                ->join('p.fichier', 'm')
                ->where('p.categorie=:cat')
                ->setParameter('cat', $categorie);
        return $query->getQuery()->getResult();
    }

    public function supp($id) {
        $query = $this->getEntityManager()->createQuery("Delete from PIDEVCrowdRiseBundle:Probleme a where a.idProbleme=:id ");
        $query->setParameter('id', $id);
        $query->execute();
    }
     public function modify($id, $titre, $description, $dateProbleme, $deadlineProbleme,$categorie) {
        $query = $this->getEntityManager()
                ->createQuery("Update PIDEVCrowdRiseBundle:Probleme c SET c.titre=:titre,c.description=:description"
                . ",c.dateProbleme=:dateProbleme,c.deadlineProbleme=:deadlineProbleme,c.categorie=:categorie"
                . " where c.idProbleme=:id ");
        
        $query->setParameter('id', $id);
        $query->setParameter('titre', $titre);
        $query->setParameter('description', $description);
        $query->setParameter('dateProbleme', $dateProbleme);
        $query->setParameter('deadlineProbleme', $deadlineProbleme);
        $query->setParameter('categorie', $categorie);
       
        $query->execute();
    }
    public function recherche($titre) {

        $query = $this->createQueryBuilder('PIDEVCrowdRiseBundle:Media')
                ->select('p.idProbleme,p.titre,p.dateProbleme,p.description,p.categorie,p.deadlineProbleme,m.path')
                ->distinct()
                ->from('PIDEVCrowdRiseBundle:Probleme', 'p')
                ->join('p.fichier', 'm')
                ->where('p.titre LIKE :titre')
                ->setParameter('titre', '%'.$titre.'%');
        return $query->getQuery()->getResult();
    }
}
